version: "3.8"

services:
  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_DB: osint_scanner
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d osint_scanner"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/osint_scanner?stringtype=unspecified
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - my_network

  client:
    build: ./client          # Путь к Dockerfile вашего React-приложения
    container_name: client
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:

